{"version":3,"sources":["assets/icons/notfoundicon.png","assets/js/utility.js","prismic-configuration.js","pages/Preview.js","pages/NotFound.js","pages/Page.js","pages/Auth/singin.jsx","pages/Auth/signup.jsx","redux/post/action.js","redux/post/actionConst.js","pages/homepage/tabs.jsx","pages/homepage/homePage.jsx","pages/helppage/index.jsx","pages/contactpage/index.jsx","pages/aboutpage/index.jsx","pages/detailpage/index.jsx","redux/nav/action.js","redux/nav/actionConst.js","layout/nav.jsx","layout/footer.jsx","App.js","redux/post/reducer.js","redux/nav/reducer.js","redux/index.js","index.js"],"names":["module","exports","String","prototype","capitalize","this","charAt","toUpperCase","slice","apiEndpoint","linkResolver","doc","type","uid","client","Prismic","accessToken","Preview","history","location","useEffect","params","qs","parse","search","token","console","warn","previewSession","then","url","push","NotFound","className","src","NotFoundIcon","alt","to","Page","match","useState","setDocData","notFound","toggleNotFound","a","getByUID","result","fetchData","style","display","justifyContent","alignItems","textAlign","fontSize","fontStyle","padding","RichText","asText","data","title","image","render","description","Singin","logoData","useSelector","state","nav","logo","icon","text","href","action","method","name","value","aria-label","required","placeholder","id","for","fill","viewBox","fill-rule","d","clip-rule","Signup","fetchPostRequest","fetchPosts","tage","dispatch","queries","Predicates","at","undefined","toLowerCase","query","orderings","res","log","payload","results","map","e","catch","error","fetchPostFailure","fetchTageRequest","fetchMiniPostRequest","fetchMiniPosts","fetchMiniPostFailure","Tabs","useDispatch","fetchTageFailure","tabs","post","tages","color","selectedTab","setSelectedTab","lenght","tabsComponent","index","onClick","key","HomePage","PageData","setPageData","posts","miniPosts","getSingle","bannerComponent","body","slice_type","primary","button_link","target","image_banner","title_of_banner","blogContent","thumbnail","author","Date","datetime","toDateString","toLocaleTimeString","subtitle","smBlogContent","banner","HelpPage","faqContent","faq","question","answer","data-open","header","ContactPage","contactComponent","items","item","link","site_contact","AboutPage","teamComponent","portrait","first_and_lastname","position","site_detail","DetailPage","Loading","setLoading","Post","setPost","postContent","content","relatedPost","fetchLogoRequest","Nav","sideBarActive","setSideBarActive","handleToggleSideBar","useLocation","links","selectedLink","linkDispatch","linksComponent","path","pathname","fetchLogoFailure","zIndex","Footer","width","withRouter","props","window","scrollTo","children","repoName","exec","routes","component","SignInPage","SignUpPage","Helmet","async","defer","basename","process","exact","from","initialState","loading","PostReducer","NavReducer","find","mainReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5b722618.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/notfoundicon.ad36f209.png\";","String.prototype.capitalize = function() {\n    return this.charAt(0).toUpperCase() + this.slice(1)\n  }","import Prismic from 'prismic-javascript'\n\n// -- Prismic API endpoint\n// Determines which repository to query and fetch data from\nexport const apiEndpoint = 'https://theseed.cdn.prismic.io/api/v2'//'https://React-sites.cdn.prismic.io/api/v2' //\n\n// -- Access Token if the repository is not public\n// Generate a token in your dashboard and configure it here if your repository is private\nconst accessToken = ''\n\n// -- Link resolution rules\n// Manages the url links to internal Prismic documents\nexport const linkResolver = (doc) => {\n  if (doc.type === 'page') return `/page/${doc.uid}`\n  return '/'\n}\n\n// Client method to query documents from the Prismic repo\nexport const client = Prismic.client(apiEndpoint, { accessToken })\n","import { useEffect } from 'react'\nimport qs from 'qs'\nimport { client, linkResolver } from '../prismic-configuration'\n\n/**\n * Prismic preview endpoint component\n */\nconst Preview = ({ history, location }) => {\n  useEffect(() => {\n    const params = qs.parse(location.search.slice(1))\n    if (!params.token) {\n      return console.warn(`Unable to retrieve session token from provided url. \\n\n      Check https://prismic.io/docs/rest-api/beyond-the-api/the-preview-feature for more info`)\n    }\n\n    // Retrieve the correct URL for the document being previewed.\n    // Once fetched, redirect to the given url\n    client.previewSession(params.token, linkResolver, '/').then(url => history.push(url))\n  })\n  return null\n}\n\nexport default Preview\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport NotFoundIcon from '../assets/icons/notfoundicon.png'\n\n/**\n * Page not found (404) componenet\n */\nconst NotFound = () => {\n  return (\n    <div className=\"py-30 h-screen flex justify-items-center flex-col items-center\">\n      <img className=\"h-1/2 object-contain\" src={NotFoundIcon} alt=\"logo\" />\n      <h2 className=\"py-4\">Document not found</h2>\n      <p className=\"text-blue-400\"><Link to=\"/\">Return to homepage</Link></p>\n    </div>\n  )\n}\n\nconst notFoundStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  height: '50vh',\n  alignItems: 'center'\n}\n\nexport default NotFound\n","// In src/pages/Page.js\nimport React, { useEffect, useState } from 'react'\nimport { RichText } from 'prismic-reactjs'\nimport { client, linkResolver } from '../prismic-configuration'\nimport NotFound from './NotFound'\n\nconst Page = ({ match }) => {\n  const [doc, setDocData] = useState(null)\n  const [notFound, toggleNotFound] = useState(false)\n\n  const uid = match.params.uid\n  const pageStyle = {\n      textAlign:'center',\n      fontSize:'30px',\n      fontStyle:'bold',\n      padding:'30px'\n    };\n   const container = {\n       display:'flex',\n       justifyContent:'center',\n       alignItems:'center'\n   }\n\n  // Get the page document from Prismic\n  useEffect(() => {\n    const fetchData = async () => {\n      // We are using the function to get a document by its UID\n      const result = await client.getByUID('page', uid)\n\n      if (result) {\n        // We use the State hook to save the document\n        return setDocData(result)\n        toggleNotFound(true)\n      } else {\n        // Otherwise show an error message\n        console.warn('Page document not found. Make sure it exists in your Prismic repository')\n        toggleNotFound(true)\n      }\n    }\n    fetchData()\n  }, [uid]) // Skip the Effect hook if the UID hasn't changed\n\n  if (doc) {\n    return (\n      <div style={container} className=\"pt-30\">\n        <div style={pageStyle}>\n            {/* This is how to render a Rich Text field as plain text */}\n            <h1 className='text-4xl font-bold text-gray-900' >{RichText.asText(doc.data.title)}</h1>\n            {/* This is how to get an image into your template */}\n            <img className='py-10' src={doc.data.image.url} alt={doc.data.image.alt} />\n            {/* This is how to render a Rich Text field into your template as HTML */}\n            <RichText render={doc.data.description} linkResolver={linkResolver} />\n        </div>\n      </div>\n    )\n  } else if (notFound) {\n    return <NotFound />\n  }\n  return (<div className=\"min-h-screen\"><NotFound /></div>)\n}\n\nexport default Page","import React, { Component } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n\nconst Singin =  () =>{\n    const logoData = useSelector(state=>state.nav.logo)\n        return (\n                <div>\n                    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8 bg-gray-200\">\n                        <div className=\"max-w-md w-full p-6 bg-white rounded-lg shadow-lg bg-opacity-75\">\n                            <div>\n                            <img className=\"mx-auto h-12 w-auto\" src={logoData && logoData.icon.url} alt=\"Workflow\"/>\n                            <h2 className=\"px-4 text-red-600 text-center font-bold\">{logoData && logoData.text}</h2>\n                            <h2 className=\"mt-6 text-center text-xl leading-9 font-extrabold text-gray-900\">\n                                Sign in to your account\n                            </h2>\n                            <p className=\"mt-2 text-center text-sm leading-5 text-gray-600\">\n                                Or <Link to=\"/signup\" href=\"#\" className=\"font-medium text-red-600 hover:text-red-500 focus:outline-none focus:underline transition ease-in-out duration-150\">\n                                    Sign Up\n                                </Link>\n                            </p>\n                            </div>\n                            <form className=\"mt-8\" action=\"#\" method=\"POST\">\n                            <input type=\"hidden\" name=\"remember\" value=\"true\"/>\n                            <div className=\"rounded-md shadow-sm\">\n                                <div>\n                                <input aria-label=\"Email address\" name=\"email\" type=\"email\" required className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:shadow-outline-blue focus:border-blue-300 focus:z-10 sm:text-sm sm:leading-5\" placeholder=\"Email address\"/>\n                                </div>\n                                <div className=\"-mt-px\">\n                                <input aria-label=\"Password\" name=\"password\" type=\"password\" required className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:shadow-outline-blue focus:border-blue-300 focus:z-10 sm:text-sm sm:leading-5\" placeholder=\"Password\"/>\n                                </div>\n                            </div>\n\n                            <div className=\"mt-6 flex items-center justify-between\">\n                                <div className=\"flex items-center\">\n                                <input id=\"remember_me\" type=\"checkbox\" className=\"form-checkbox h-4 w-4 text-red-600 transition duration-150 ease-in-out\"/>\n                                <label for=\"remember_me\" className=\"ml-2 block text-sm leading-5 text-gray-900\">\n                                    Remember me\n                                </label>\n                                </div>\n\n                                <div className=\"text-sm leading-5\">\n                                <a href=\"#\" className=\"font-medium text-red-600 hover:text-red-500 focus:outline-none focus:underline transition ease-in-out duration-150\">\n                                    Forgot your password?\n                                </a>\n                                </div>\n                            </div>\n\n                            <div className=\"mt-6\">\n                                <Link to=\"/student\">\n                                <button type=\"submit\" className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm leading-5 font-medium rounded-md text-white bg-red-600 hover:bg-red-500 focus:outline-none focus:border-red-700 focus:shadow-outline-red active:bg-red-700 transition duration-150 ease-in-out\">\n                                <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                                    <svg className=\"h-5 w-5 text-red-500 group-hover:text-red-400 transition ease-in-out duration-150\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                    <path fill-rule=\"evenodd\" d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\" clip-rule=\"evenodd\" />\n                                    </svg>\n                                </span>\n                                Login\n                                </button>\n                                </Link>\n                            </div>\n                            </form>\n                        </div>\n                    </div>\n\n            </div>\n        );\n\n}\n\nexport default Singin;\n","import React, { Component } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n\nconst Signup = ()=> {\n        const logoData = useSelector(state=>state.nav.logo)\n        return (\n            <div>\n                    <div className=\"min-h-screen flex items-center justify-center  py-12 px-4 sm:px-6 lg:px-8  bg-gray-200\">\n                        <div className=\"max-w-md w-full bg-white bg-opacity-75 p-6 shadow-lg rounded-lg\">\n                            <div className=\"\">\n                            <img className=\"mx-auto h-12 w-auto\" src={logoData && logoData.icon.url} alt=\"Workflow\"/>\n                            <h2 className=\"px-4 text-red-600 text-center font-bold\">{logoData && logoData.text}</h2>\n                            <h2 className=\"mt-6 text-center text-xl leading-9 font-extrabold text-gray-900\">\n                                Sign Up a New Account with few step!\n                            </h2>\n                            <p className=\"mt-2 text-center text-sm leading-5 text-gray-600\">\n                                Or <Link to=\"/login\" href=\"#\" className=\"font-medium text-red-600 hover:text-red-500 focus:outline-none focus:underline transition ease-in-out duration-150\">\n                                    Login\n                                </Link>\n                            </p>\n                            </div>\n                            <form className=\"mt-8\" action=\"#\" method=\"POST\">\n                            <input type=\"hidden\" name=\"remember\" value=\"true\"/>\n                            <div className=\"rounded-md shadow-sm\">\n                            <div>\n                                <input aria-label=\"Full Name\" name=\"fullname\" type=\"text\" required className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:shadow-outline-blue focus:border-blue-300 focus:z-10 sm:text-sm sm:leading-5\" placeholder=\"Full Name\"/>\n                                </div>\n                                <div>\n                                <input aria-label=\"Email address\" name=\"email\" type=\"email\" required className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900  focus:outline-none focus:shadow-outline-blue focus:border-blue-300 focus:z-10 sm:text-sm sm:leading-5\" placeholder=\"Email address\"/>\n                                </div>\n                                <div className=\"-mt-px\">\n                                <input aria-label=\"Password\" name=\"password\" type=\"password\" required className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:shadow-outline-blue focus:border-blue-300 focus:z-10 sm:text-sm sm:leading-5\" placeholder=\"Password\"/>\n                                </div>\n                            </div>\n\n                            \n\n                            <div className=\"mt-6\">\n                                <button type=\"submit\" className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm leading-5 font-medium rounded-md text-white bg-red-600 hover:bg-red-500 focus:outline-none focus:border-red-700 focus:shadow-outline-red active:bg-red-700 transition duration-150 ease-in-out\">\n                                <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                                    <svg className=\"h-5 w-5 text-red-500 group-hover:text-red-400 transition ease-in-out duration-150\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                    <path fill-rule=\"evenodd\" d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\" clip-rule=\"evenodd\" />\n                                    </svg>\n                                </span>\n                                Sign Up\n                                </button>\n                            </div>\n                            </form>\n                        </div>\n                    </div>\n\n            </div>\n        );\n\n}\n\nexport default Signup;\n","import * as actionConst from './actionConst'\nimport { client } from '../../prismic-configuration'\nimport Prismic from 'prismic-javascript'\n\nexport const AddPost = post => {\n    return {\n        type : actionConst.POST_ADD,\n        payload:post\n    }\n}\n\nexport const fetchPostRequest = () => {\n    return {\n      type: actionConst.FETCH_POST_REQUEST\n    }\n  }\n  \nexport const fetchPostSuccess = list => {\n    return {\n      type: actionConst.FETCH_POST_SUCCESS,\n      payload: list\n    }\n  }\n  \nexport const fetchPostFailure = error => {\n    return {\n      type: actionConst.FETCH_POST_FAILURE,\n      payload: error\n    }\n}\n\nexport const fetchPosts = (tage = '')=>{\n  return dispatch => {\n    dispatch(fetchPostRequest)\n    var queries = [\n      Prismic.Predicates.at('document.type', 'post')\n    ]\n    if(tage !== undefined && tage !== null && tage !== '' && tage.toLowerCase() !== 'all') queries.push( Prismic.Predicates.at('my.post.tage', tage.toLowerCase().capitalize()))\n    client.query(\n      queries\n      ,\n      {orderings : '[my.post.datetime desc]' }\n    ).then((res)=>{\n      console.log(res)\n      console.log('Load post')\n      dispatch(fetchPostSuccess(res.results.map(e=>{\n        return {\n          ...e.data,\n          id:e.uid\n          }\n      })))\n    }).catch(error=>{\n      console.log(error)\n      dispatch(fetchPostFailure(error))\n    })\n  }\n}\n\nexport const fetchTageRequest = () => {\n  return {\n    type: actionConst.FETCH_TAGE_REQUEST\n  }\n}\n\nexport const fetchTageSuccess = list => {\n  return {\n    type: actionConst.FETCH_TAGE_SUCCESS,\n    payload: list\n  }\n}\n\nexport const fetchTageFailure = error => {\n  return {\n    type: actionConst.FETCH_TAGE_FAILURE,\n    payload: error\n  }\n}\n\nexport const fetchTages = ()=>{\nreturn dispatch => {\n  dispatch(fetchTageRequest)\n  var queries = [\n    Prismic.Predicates.at('document.type', 'tage')\n  ]\n  client.query(\n    queries\n    ,\n    {orderings : '[my.tage.id]' }\n  ).then((res)=>{\n    console.log(res)\n    console.log('Load tage')\n    dispatch(fetchTageSuccess(res.results.map(e=>e.data)))\n  }).catch(error=>{\n    console.log(error)\n    dispatch(fetchTageFailure(error))\n  })\n}\n}\n\n\nexport const fetchMiniPostRequest = () => {\n  return {\n    type: actionConst.FETCH_MINI_POST_REQUEST\n  }\n}\n\nexport const fetchMiniPostSuccess = list => {\n  return {\n    type: actionConst.FETCH_MINI_POST_SUCCESS,\n    payload: list\n  }\n}\n\nexport const fetchMiniPostFailure = error => {\n  return {\n    type: actionConst.FETCH_MINI_POST_FAILURE,\n    payload: error\n  }\n}\n\n\nexport const fetchMiniPosts = (tage = '')=>{\n  return dispatch => {\n    dispatch(fetchMiniPostRequest)\n    var queries = [\n      Prismic.Predicates.at('document.type', 'minipo')\n    ]\n    // if(tage !== undefined && tage !== null && tage !== '' && tage.toLowerCase() !== 'all') queries.push( Prismic.Predicates.at('my.post.tage', tage.toLowerCase().capitalize()))\n    client.query(\n      queries\n      ,\n      {orderings : '[my.minipo.datetime desc]' }\n    ).then((res)=>{\n      console.log(res)\n      console.log('Load MINI POST')\n      dispatch(fetchMiniPostSuccess(res.results.map(e=>{\n        return {\n          ...e.data,\n          id:e.uid\n          }\n      })))\n    }).catch(error=>{\n      console.log(error)\n      dispatch(fetchMiniPostFailure(error))\n    })\n  }\n}","export const POST_ADD = \"POST_ADD\"\nexport const POST_UPDATE = \"POST_UPDATE\"\nexport const POST_REMOVE = \"POST_REMOVE\"\n\nexport const FETCH_POST_REQUEST = 'FETCH_POST_REQUEST'\nexport const FETCH_POST_SUCCESS = 'FETCH_POST_SUCCESS'\nexport const FETCH_POST_FAILURE = 'FETCH_POST_FAILURE'\n\nexport const FETCH_MINI_POST_REQUEST = 'FETCH_MINI_POST_REQUEST'\nexport const FETCH_MINI_POST_SUCCESS = 'FETCH_MINI_POST_SUCCESS'\nexport const FETCH_MINI_POST_FAILURE = 'FETCH_MINI_POST_FAILURE'\n\nexport const FETCH_TAGE_REQUEST = 'FETCH_TAGE_REQUEST'\nexport const FETCH_TAGE_SUCCESS = 'FETCH_TAGE_SUCCESS'\nexport const FETCH_TAGE_FAILURE = 'FETCH_TAGE_FAILURE'","import React, {useState, useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchTages } from '../../redux/post/action';\n\n\nconst Tabs = () => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(fetchTages())\n        console.log('Fetch tage')\n    }, []);\n    const tabs = useSelector(state => state.post.tages)\n    const [selectedTab,setSelectedTab] = useState({\n        text:\"All\",\n        id:1,\n        color:''\n    });\n    useEffect(()=>{\n        if(selectedTab ==null){\n            setSelectedTab(tabs !== undefined && tabs !== undefined && tabs.lenght > 0 ? tabs[0]:null)\n        }\n    },[tabs])\n    \n    const tabsComponent = tabs !== undefined && tabs !== null && tabs.map((e,index)=>(\n        <Link onClick={()=>setSelectedTab(e)} key={index} to={`/home/${e.text}`}>\n            <div   className=\"relative transistion duration-100 cursor-pointer px-4 border-0 border-t-0 border-r-0 border-l-0 border-solid\">\n                <p className={`text-lg font-medium hover:text-red-600 ${selectedTab !== null && selectedTab.text === e.text && \"text-red-600 border-red-600 border-2 border-t-0 border-r-0 border-l-0 border-solid\"}`}>{e.text}</p>\n            </div>\n        </Link>\n    ))\n    return (\n        <div className=\"flex overflow-scroll hideScrollBar\">\n           {tabsComponent}\n        </div>\n    );\n}\n\nexport default Tabs;\n","import React,{ useEffect, useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport {fetchMiniPosts, fetchPosts} from '../../redux/post/action'\nimport {Link as RouteLink} from 'react-router-dom'\nimport {RichText, Date  } from 'prismic-reactjs'\nimport {client, linkResolver } from '../../prismic-configuration'\nimport Tabs  from './tabs'\nconst HomePage = ({match}) => {\n    const [PageData, setPageData] = useState(null);\n    const dispatch = useDispatch()\n    const posts = useSelector(state => state.post.posts)\n    const miniPosts = useSelector(state => state.post.miniPosts)\n    const logo = useSelector(state => state.nav.logo)\n    const fetchData = ()=>{\n      client.getSingle('homepage').then((res)=>{\n      setPageData(res.data)\n      console.log(res)\n      }).catch(error=>{\n        console.log(error)\n      })\n  }\n    const tage = match.params.uid\n    useEffect(()=>{\n        dispatch(fetchPosts(tage))\n        dispatch(fetchMiniPosts())\n        fetchData()\n\n    },[tage])\n\n    const bannerComponent = PageData && PageData.body.map((slice, index)=>{\n      if(slice.slice_type == 'banner_with_caption'){\n          return (\n              <a href={slice.primary.button_link.url} target=\"_blank\" className=\"w-full flex flex-col items-center justify-center overflow-hidden shadow-md bg-white transition duration-100 transform hover:scale-95\">\n                      <img className=\"w-full h-2/3 overflow-x-hidden object-cover\" src={slice.primary.image_banner.url} alt=\"\"/>\n                      <div className=\"py-4\">\n                      <h1 className=\"text-sm text-gray-800 text-center\">{RichText.asText(slice.primary.title_of_banner,linkResolver)}</h1>\n                      <p className=\"text-sm font-thin text-gray-600 text-center\">{RichText.asText(slice.primary.description,linkResolver)}</p>\n                      {/* <a href={slice.primary.button_link.url} target=\"_blank\" className=\"\"><p className=\"p-1 px-4 mt-4 text-gray-600  border border-gray-600 border-solid rounded-lg text-sm\">{RichText.asText(slice.primary.button_label,linkResolver)}</p></a> */}\n                      </div>\n              </a>\n          )\n      }\n  })\n\n    const blogContent = posts && posts.map((post,index)=>(\n      <div key={index+10} className=\"flex flex-wrap p-4 m-4 relative\">\n        <div className=\"w-full sm:w-2/5\">\n            {/* <div className=\"w-64 h-64 overflow-hidden\"> */}\n            <img className=\"w-full h-64 object-cover\" src={post.thumbnail.url} alt=\"\"/>\n            {/* </div> */}\n        </div>\n        <div className=\"flex-1 sm:px-4 pb-20 sm:pb-0\">\n          <div className=\"text-gray-900 text-2xl font-bold leading-none\">\n              {RichText.asText(post.title)}\n          </div>\n          <p className=\"text-xs text-red-800 py-2\">\n              <span className=\"\">Author: {post.author} </span> | <span className=\"font-light\">{`${new Date(post.datetime).toDateString()} ${new Date(post.datetime).toLocaleTimeString()}`}</span>\n          </p>\n          <div className=\"text-sm text-gary-600 font-light pt-2 overflow-hidden\">\n              {RichText.asText(post.subtitle)}\n          </div>\n\n          <div className=\"absolute bottom-0 pb-4 text-xs font-bold text-gray-900 flex-1 flex items-end\">\n            <RouteLink   to={`/detail/${post.id}`}><div className=\" hover:bg-red-600 hover:text-white py-1 px-4 mx-1 border border-solid \">READ</div></RouteLink>\n            {/* <RouteLink   to=\"/login\"><div className=\" hover:bg-red-600 hover:text-white py-1 px-4 mx-1 border border-solid \">SAVE</div></RouteLink> */}\n              {/* {RichText.render(item.content)} */}\n          </div>\n        </div>\n    </div>\n    ));\n\n      const smBlogContent = miniPosts && miniPosts.map((post,index)=>(\n        <div key={index+10} className=\"flex flex-wrap p-4 relative border border-t-0 border-l-0 border-r-0\">\n                    <div className=\"flex-1 sm:px-4 pb-10\">\n                      <div className=\"text-gray-900 text-lg font-bold leading-none\">\n                          {RichText.asText(post.title)}\n                      </div>\n                      <p className=\"text-xs text-red-800 py-2\">\n                          <span className=\"\">Author:{post.author} </span> | <span className=\"font-light\">{`${new Date(post.datetime).toDateString()} ${new Date(post.datetime).toLocaleTimeString()}`}</span>\n                      </p>\n                      {/* <div className=\"text-sm text-gary-600 font-light pt-4\">\n                          {RichText.render(item.subtitle)}\n                      </div> */}\n\n                      <div className=\"absolute bottom-4 right-4 text-xs font-bold text-gray-900 flex-1 flex items-end justify-end\">\n                        <RouteLink   to={`/detail/${post.id}`}><div className=\" hover:bg-red-600 hover:text-white py-1 px-4 mx-1 border border-solid \">READ</div></RouteLink>\n                        {/* <RouteLink   to=\"/login\" target=\"_blank\"><div className=\" hover:bg-red-600 hover:text-white py-1 px-4 mx-1 border border-solid \">SAVE</div></RouteLink> */}\n                          {/* {RichText.render(item.content)} */}\n                      </div>\n                    </div>\n                </div>\n      ));\n    \n      return (\n        <div className=\"bg-white\">\n            <img className=' w-full h-30vh object-cover ' src={PageData && PageData.banner.url} />\n             <div className=\"z-100  w-full flex justify-center text-6xl font-bold  py-20 \">\n                <h1 className=\"text-4xl text-red-600\">{logo&&logo.text}</h1>\n             </div>\n             <div className=\"sm:px-10 px-2\"><Tabs/></div>\n             <div className=\"w-full border border-dash border-t-0 border-r-0 border-l-0\">\n              \n             </div>\n             <div className=\"flex flex-wrap divide-x divide-gray-300\">\n             <div className=\"w-full sm:w-2/3\">\n             {blogContent}\n             </div>\n             <div className=\"w-full sm:w-1/3\">\n               <h1 className=\"text-xl font-bold text-center pt-10 sm:py-4 text-red-600\">HOT TOPIC</h1>\n              {smBlogContent}\n              <div className=\"flex flex-col items-center\">\n                {bannerComponent}\n              </div>\n             </div>\n             </div>\n        </div>\n    );\n};\n\n\n\nexport default HomePage;\n","import React, {useState, useEffect} from 'react';\nimport {client, linkResolver } from '../../prismic-configuration'\nimport {Link, RichText, Date} from 'prismic-reactjs';\nimport { useSelector } from 'react-redux';\n\n\nconst HelpPage = () => {\n    const [PageData, setPageData] = useState(null);\n    \n    \n    const fetchData = ()=>{\n          client.getSingle('helppage').then((res)=>{\n        \n          setPageData(res.data)\n          console.log(res)\n          }).catch(error=>{\n            console.log(error)\n          })\n      }\n    useEffect(()=>{\n        fetchData();\n    },[])\n    const faqContent = PageData && (<div>{RichText.render(PageData.faq, linkResolver)}</div>)\n\n    const faqs = [\n        {\n            id:1,\n            question:'what is the site?',\n            answer:'this site provide News, Tips and other information.'\n        },\n        {\n            id:2,\n            question:'what is the site?',\n            answer:'this site provide News, Tips and other information.'\n        },\n        {\n            id:3,\n            question:'what is the site?',\n            answer:'this site provide News, Tips and other information.'\n        },\n        {\n            id:4,\n            question:'what is the site?',\n            answer:'this site provide News, Tips and other information.'\n        }\n    ]\n    const faqComponnent = faqs.map((e,index)=>(\n        <div className=\"py-4\">\n            <div data-open=\"0\" className=\"flex justify-between items-center\">\n                <div className=\"\">\n                    <h4 className=\"font-meduim text-2xl\">{e.question}</h4>\n                </div>\n                <div><button className=\"w-8 h-8\">^</button></div>\n            </div>\n            <div className=\"text-gray-600\"><p>{e.answer}</p></div>\n        </div>\n    ))\n  \n    return (\n        <div className=\"py-30 bg-gray-200\">\n            <h1 className=\"text-3xl text-center font-bold py-8\">{PageData && RichText.asText(PageData.header, linkResolver)}</h1>\n            <div className=\"flex justify-center\">\n                <div className=\" w-11/12 sm:w-1/2 h-10 p-2 rounded-lg shadow-xl bg-white\">\n                    <input className=\"border-none w-full\" type=\"text\" placeholder=\"What are you looking for?\"/>\n                </div>\n\n            </div>\n            <div className=\"flex justify-center py-8\">\n                <div className=\"px-4 text-light\">\n                    {faqContent}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default HelpPage;\n","import React, {useState, useEffect} from 'react';\nimport {client, linkResolver } from '../../prismic-configuration'\nimport {Link, RichText, Date} from 'prismic-reactjs';\nimport { useSelector } from 'react-redux';\n\nconst ContactPage = () => {\n    const [PageData, setPageData] = useState(null);\n\n    const logoData = useSelector(state=>state.nav.logo)\n    const fetchData = ()=>{\n          client.getSingle('contactpage').then((res)=>{\n        \n          setPageData(res.data)\n          console.log(res)\n          }).catch(error=>{\n            console.log(error)\n          })\n      }\n    useEffect(()=>{\n        fetchData();\n    },[])\n    const contactComponent = PageData && PageData.body.map((slice, index)=>{\n        if(slice.slice_type == 'contact_link'){\n            const  teams = slice.items.map((item,index)=>\n                 (\n                    <a href={item.link.url} target=\"_blank\"  key={index} className=\"px-4 cursor-pointer\">\n                        <img className=\"w-8 h-8 object-contain mx-auto\" src={item.icon.url} alt=\"\"/>\n                        <p className=\"text-bold text-center text-sm pt-4\">{RichText.asText(item.name,linkResolver)}</p>\n                    </a>\n                )\n            )\n            return teams\n        }\n        return null;\n    })\n    return (\n        <div className=\"py-30 bg-gray-200\">\n            <h1 className=\"text-3xl text-center font-bold py-8\">CONTACT US</h1>\n            <div className=\"flex justify-center\">\n                <div className=\" w-11/12 sm:w-1/2  p-10 rounded-lg shadow-xl bg-white flex flex-wrap  sm:divide-x\">\n                    <div className=\"w-full sm:w-1/2 \">\n                        <img className=\"mx-auto h-10 w-auto\" src={logoData&&logoData.icon.url} alt=\"Workflow\"/>\n                        <h1 className=\"text-lg text-red-600 font-bold text-center py-2\">{logoData&&logoData.text}</h1>\n                    </div>\n                    <div className=\"w-full sm:w-1/2 flex justify-center items-center\">\n                        <div className=\"px-4\">\n                            {PageData && RichText.render(PageData.site_contact,linkResolver)}\n                            {/* <p className=\"text-sm text-gray-600\">LOCATION: <span className=\"text-sm text-gray-800 font-medium\">WORLD WIDE</span></p>\n                            <p className=\"text-sm text-gray-600\">TEL: <span className=\"text-sm text-gray-800 font-medium\">00-11-222-333</span></p>\n                            <p className=\"text-sm text-gray-600\">MAIL: <span className=\"text-sm text-gray-800 font-medium\">ADMIN@THESEEED.COM</span></p> */}\n                        </div>\n                    </div>\n                    \n                </div>\n\n            </div>\n            <div className=\"flex justify-center\">\n                <div className=\"flex py-10\">\n                {contactComponent}\n                </div>\n            </div>\n            \n        </div>\n    );\n}\n\nexport default ContactPage;\n","import React, {useState, useEffect} from 'react';\nimport {client, linkResolver } from '../../prismic-configuration'\nimport {Link, RichText, Date} from 'prismic-reactjs';\nimport { useSelector } from 'react-redux';\n\nconst AboutPage = () => {\n    const [PageData, setPageData] = useState(null);\n    \n    const logoData = useSelector(state=>state.nav.logo)\n    const fetchData = ()=>{\n          client.getSingle('aboutpage').then((res)=>{\n        \n          setPageData(res.data)\n          console.log(res)\n          }).catch(error=>{\n            console.log(error)\n          })\n      }\n    useEffect(()=>{\n        fetchData();\n    },[])\n    const teamComponent = PageData && PageData.body.map((slice, index)=>{\n        if(slice.slice_type == 'team'){\n            const  teams = slice.items.map((item,index)=>\n                 (\n                    <div className=\"floating p-4 m-2 bg-white rounded-lg shadow-lg flex flex-col items-center justify-center\">\n                        <img className=\"w-34 h-34 rounded-full overflow-hidden shadow-lg\" src={item.portrait.url} alt=\"\"/>\n                        <h1 className=\"font-bold text-sm text-gray-800 pt-4\">{RichText.asText(item.first_and_lastname,linkResolver)}</h1>\n                        <p className=\"text-sm font-thin text-gray-600\">{RichText.asText(item.position,linkResolver)}</p>\n                        <a href={item.link.url} target=\"_blank\" className=\"\"><p className=\"p-1 px-4 mt-4 text-gray-600 hover:text-red-600  border border-gray-600 hover:border-red-600 border-solid rounded-lg text-sm\">SEE MORE</p></a>\n                    </div>\n                )\n            )\n            return teams\n        }\n    })\n    return (\n        <div className=\"py-30 bg-gray-200\">\n            <h1 className=\"text-3xl text-center font-bold py-8\">ABOUT US</h1>\n            <div className=\"flex justify-center\">\n                <div className=\"w-11/12 sm:w-1/2  p-10 rounded-lg shadow-xl bg-white flex flex-wrap sm:divide-x\">\n                    <div className=\"w-full sm:w-1/2 \">\n                        <img className=\"mx-auto h-10 w-auto\" src={logoData&&logoData.icon.url} alt=\"Workflow\"/>\n                        <h1 className=\"text-lg text-red-600 font-bold text-center py-2\">{logoData&&logoData.text}</h1>\n                    </div>\n                    <div className=\"w-full sm:w-1/2 flex justify-center items-center\">\n                        <div className=\"px-4 text-lg font-thin\">\n                            {PageData && RichText.render(PageData.site_contact,linkResolver)}\n                            {/* <p className=\"text-sm text-gray-600\">LOCATION: <span className=\"text-sm text-gray-800 font-medium\">WORLD WIDE</span></p>\n                            <p className=\"text-sm text-gray-600\">TEL: <span className=\"text-sm text-gray-800 font-medium\">00-11-222-333</span></p>\n                            <p className=\"text-sm text-gray-600\">MAIL: <span className=\"text-sm text-gray-800 font-medium\">ADMIN@THESEEED.COM</span></p> */}\n                        </div>\n                    </div>\n                    \n                </div>\n                \n\n            </div>\n            <div className=\" flex justify-center\">\n            <div className=\"py-10 w-11/12 sm:w-1/2\">\n                <p className=\"text-gray-600 text-md text-center\">\n                    {PageData && RichText.render(PageData.site_detail,linkResolver)}\n                </p>\n            </div>\n            </div>\n            <div className=\" flex flex-col items-center justify-center\">\n                <h1>OUR TEAM</h1>\n            <div className=\"py-10 flex flex-wrap justify-center items-center\">\n                \n                {teamComponent}\n            </div>\n            </div>\n            \n        </div>\n    );\n}\n\nexport default AboutPage;\n","// In src/pages/Page.js\nimport React, { useEffect, useState } from 'react'\nimport { RichText } from 'prismic-reactjs'\nimport { client, linkResolver } from '../../prismic-configuration'\nimport NotFound from '../NotFound'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {Link as RouteLink} from 'react-router-dom'\nimport { fetchMiniPosts, fetchPosts } from '../../redux/post/action'\n\nconst DetailPage = ({ match }) => {\n        const [Loading, setLoading] = useState(true);\n        const [PageData, setPageData] = useState(null);\n        const [Post, setPost] = useState(null);\n\n   \n        const dispatch = useDispatch()\n        const posts = useSelector(state => state.post.posts)\n        const miniPosts = useSelector(state => state.post.miniPosts)\n        useEffect(()=>{\n            dispatch(fetchPosts())\n            dispatch(fetchMiniPosts())\n            \n        },[])\n        const fetchData = ()=>{\n              client.getSingle('postdetailpage').then((res)=>{\n              setPageData(res.data)\n              setLoading(false)\n              console.log(res)\n              }).catch(error=>{\n                console.log(error)\n              })\n          }\n\n          useEffect(()=>{\n            fetchData();\n\n            },[])\n            const bannerComponent = PageData && PageData.body.map((slice, index)=>{\n                if(slice.slice_type == 'banner_with_caption'){\n                    return (\n                        <a href={slice.primary.button_link.url} target=\"_blank\" className=\"w-full flex flex-col items-center justify-center overflow-hidden shadow-md bg-white transition duration-100 transform hover:scale-105\">\n                                <img className=\"w-full h-2/3 object-cover overflow-hidden\" src={slice.primary.image_banner.url} alt=\"\"/>\n                                <div className=\"py-4\">\n                                <h1 className=\"text-sm text-gray-800 text-center\">{RichText.asText(slice.primary.title_of_banner,linkResolver)}</h1>\n                                <p className=\"text-sm font-thin text-gray-600 text-center\">{RichText.asText(slice.primary.description,linkResolver)}</p>\n                                {/* <a href={slice.primary.button_link.url} target=\"_blank\" className=\"\"><p className=\"p-1 px-4 mt-4 text-gray-600  border border-gray-600 border-solid rounded-lg text-sm\">{RichText.asText(slice.primary.button_label,linkResolver)}</p></a> */}\n                                </div>\n                        </a>\n                    )\n                }\n            })\n        \n\n        const uid = match.params.uid\n        const fetchPostData = ()=>{\n            client.getByUID('post', uid).then((res)=>{\n            setPost(res.data)\n            console.log(res)\n            }).catch(error=>{\n              console.log(error)\n            })\n        }\n        useEffect(()=>{\n            \n            fetchPostData();\n            \n        },[uid])\n\n        const postContent = Post && (\n            <div className=\"border border-solid border-gray-300 p-4 bg-white\">\n                <div className=\"py-4 text-4xl font-bold leading-9 border border-t-0 border-r-0 border-l-0 border-solid border-gray-600\">\n                    {Post && RichText.asText(Post.title,linkResolver)}\n                            {Post && (\n                            <p className=\"text-xs text-red-800 py-2\">\n                            <span className=\"\">Author: {Post.author} </span> | <span className=\"font-light\">{`${new Date(Post.datetime).toDateString()} ${new Date(Post.datetime).toLocaleTimeString()}`}</span>\n                        </p>\n                        )}\n                </div>\n                <div className=\"font-medium text-gray-700 text-lg leading-loose \">\n                    <img className=\"w-full overflow-hidden mb-4\" src={Post.thumbnail.url} alt=\"\"/>\n                    {RichText.render(Post.content,linkResolver)}\n                </div>\n            </div>\n            \n        )\n        const relatedPost = miniPosts && miniPosts.map((post,index)=>(\n            <div key={index+10} className=\"flex flex-wrap p-4 relative border border-t-0 border-l-0 border-r-0\">\n                        <div className=\"flex-1 sm:px-4 pb-10\">\n                          <div className=\"text-gray-900 text-lg font-bold leading-none\">\n                              {RichText.asText(post.title)}\n                          </div>\n                          <p className=\"text-xs text-red-800 py-2\">\n                              <span className=\"\">Author:{post.author} </span> | <span className=\"font-light\">{`${new Date(post.datetime).toDateString()} ${new Date(post.datetime).toLocaleTimeString()}`}</span>\n                          </p>\n                          {/* <div className=\"text-sm text-gary-600 font-light pt-4\">\n                              {RichText.render(item.subtitle)}\n                          </div> */}\n    \n                          <div className=\"absolute bottom-4 right-4 text-xs font-bold text-gray-900 flex-1 flex items-end justify-end\">\n                            <RouteLink   to={`/detail/${post.id}`}><div className=\" hover:bg-red-600 hover:text-white py-1 px-4 mx-1 border border-solid \">READ</div></RouteLink>\n                            {/* <RouteLink   to=\"/login\" target=\"_blank\"><div className=\" hover:bg-red-600 hover:text-white py-1 px-4 mx-1 border border-solid \">SAVE</div></RouteLink> */}\n                              {/* {RichText.render(item.content)} */}\n                          </div>\n                        </div>\n                    </div>\n          ));\n        //   const smBlogContent = posts && posts.map((post,index)=>(\n        //     <div key={index+10} className=\"flex flex-wrap p-4 relative border border-t-0 border-l-0 border-r-0\">\n        //                 <div className=\"flex-1 sm:px-4 pb-10\">\n        //                   <div className=\"text-gray-900 text-lg font-bold leading-none\">\n        //                       {RichText.asText(post.title)}\n        //                   </div>\n        //                   <p className=\"text-xs text-red-800 py-2\">\n        //                       <span className=\"\">Author:{post.author} </span> | <span className=\"font-light\">{`${new Date(post.datetime).toDateString()} ${new Date(post.datetime).toLocaleTimeString()}`}</span>\n        //                   </p>\n        //                   {/* <div className=\"text-sm text-gary-600 font-light pt-4\">\n        //                       {RichText.render(item.subtitle)}\n        //                   </div> */}\n    \n        //                   <div className=\"absolute bottom-4 right-4 text-xs font-bold text-gray-900 flex-1 flex items-end justify-end\">\n        //                     <RouteLink   to={`/detail/${post.id}`}><div className=\" hover:bg-red-600 hover:text-white py-1 px-4 mx-1 border border-solid \">READ</div></RouteLink>\n        //                     <RouteLink   to=\"/login\" target=\"_blank\"><div className=\" hover:bg-red-600 hover:text-white py-1 px-4 mx-1 border border-solid \">SAVE</div></RouteLink>\n        //                       {/* {RichText.render(item.content)} */}\n        //                   </div>\n        //                 </div>\n        //             </div>\n        //   ));\n\n  const pageStyle = {\n      textAlign:'center',\n      fontSize:'30px',\n      fontStyle:'bold',\n      padding:'30px'\n    };\n   const container = {\n       display:'flex',\n       justifyContent:'center',\n       alignItems:'center'\n   }\n\n  \n\n  if (PageData) {\n    return (\n        <div className=\"py-20 sm:py-30 flex flex-wrap bg-white \">\n            <div className=\"w-full flex justify-center items-center p-2 sm:p-0 py-4 sm:py-10 \">\n            {PageData.thumbnail && (<img className='w-full sm:w-3/5 object-contain border-4  border-solid border-white shadow-lg' src={PageData.thumbnail.url} />)}\n            </div>\n            <div className=\"w-full md:w-4/5 px-4 flex flex-wrap-reverse\">\n                <div className=\"w-full md:w-1/4 border sm:border-r-0\">\n                    <h1 className=\"text-xl font-bold text-center py-8 sm:py-4 text-red-600 border border-t-0 border-l-0 border-r-0\">HOT TOPIC</h1>\n                    {relatedPost}\n                </div>\n                <div className=\"w-full md:w-3/4\">\n                    {postContent}\n                </div>\n            </div>\n            <div className=\"w-full px-4 md:w-1/5 flex flex-col items-center justify-start space-y-4\">\n            {bannerComponent}\n            </div>\n            \n        </div>\n    )\n  } else if (!Loading) {\n    return <NotFound />\n  }\n  return null\n}\n\nexport default DetailPage","import Prismic from 'prismic-javascript'\nimport * as actionConst from './actionConst'\nimport {client, linkResolver } from '../../prismic-configuration'\n\nexport const selectLink = link => {\n    return {\n        type : actionConst.NAV_SELECT,\n        payload:link\n    }\n}\n\nexport const selectLinkByPath = path => {\n  return {\n      type : actionConst.NAV_SELECT_BY_PATHG,\n      payload:path\n  }\n}\n\n\nexport const fetchLogoRequest = () => {\n    return {\n      type: actionConst.FETCH_LOGO_REQUEST\n    }\n  }\n  \nexport const fetchLogoSuccess = list => {\n    return {\n      type: actionConst.FETCH_LOGO_SUCCESS,\n      payload: list\n    }\n  }\n  \nexport const fetchLogoFailure = error => {\n    return {\n      type: actionConst.FETCH_LOGO_FAILURE,\n      payload: error\n    }\n  }\n\nexport const fetchLogo = ()=>{\n  return dispatch => {\n    dispatch(fetchLogoRequest)\n    client.getSingle('sitelogo').then((res)=>{\n      dispatch(fetchLogoSuccess(res.data))\n    }).catch(error=>{\n      console.log(error)\n      dispatch(fetchLogoFailure(error))\n    })\n  }\n}\n\n","export const NAV_SELECT = \"NAV_SELECT\"\nexport const NAV_SELECT_BY_PATHG = \"NAV_SELECT_BY_PATHG\"\n\nexport const FETCH_LOGO_REQUEST = 'FETCH_LOGO_REQUEST'\nexport const FETCH_LOGO_SUCCESS = 'FETCH_LOGO_SUCCESS'\nexport const FETCH_LOGO_FAILURE = 'FETCH_LOGO_FAILURE'","import React, { useEffect, useState } from 'react';\nimport {Link, useLocation} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux'\nimport * as NavAction from '../redux/nav/action'\n\n\nconst Nav = ({ match,history })=>{\n    const [sideBarActive,setSideBarActive]=useState(false);\n    // const [doc, setDocData] = useState(null)\n    const handleToggleSideBar = ()=>{\n        setSideBarActive(!sideBarActive)\n        console.log('click')\n    }\n    const handleLinkClicked = (e)=>{\n        \n    }\n    const logo = useSelector(state => state.nav.logo)\n    const location = useLocation();\n    const links = useSelector(state => state.nav.links)\n    const selectedLink = useSelector(state => state.nav.selectedLink)\n    const linkDispatch = useDispatch()\n    const linksComponent = links.map(e=>(<Link onClick={()=>handleLinkClicked(e)} key={e.path} className={`hover:text-red-600 ${selectedLink && selectedLink.path === e.path && 'text-red-500'}`} to={e.path}>{e.title}</Link>))\n    useEffect(()=>{\n        console.log(location.pathname)\n        linkDispatch(NavAction.fetchLogo())\n        linkDispatch(NavAction.selectLinkByPath(location.pathname))\n    },[location])\n    // useEffect(()=>{\n    //     const fetchData = async () => {\n    //         // We are using the function to get a document by its UID\n    //         const result = await client.getByUID('page', 'home')\n    //         console.log(\"result\",result);\n    //         if (result) {\n    //           // We use the State hook to save the document\n    //           return setDocData(result)\n    //         } else {\n    //           // Otherwise show an error message\n    //           console.warn('Page document not found. Make sure it exists in your Prismic repository')\n              \n    //         }\n    //       }\n    //     //   fetchData()\n    // },[])\n    \n\n \n        const navStyle = {\n            zIndex:999\n        }\n\n        return ( \n            <div style={navStyle} className=\"fixed top-0 inset-x-0 bg-gray-200  shadow-lg font-semibold text-gray-900 flex p-4 sm:pl-10  bg-opacity-75 border border-opacity-25 border-solid border-red-600\">\n                    <div className=\"flex items-center\">\n                        <Link className=\"hover:text-red-600\" to=\"/\">\n                            <div className=\"flex justify-center items-center\">\n                            <img className=\"mx-auto h-10 w-auto\" src={logo.icon.url} alt=\"Workflow\"/>\n                            <h2 className=\"px-4 text-red-600\">{logo.text}</h2>\n                            </div>\n                        </Link>\n                    </div>\n    \n                    {/* Destop screen */}\n                    <div className=\"hidden sm:flex flex-1  justify-end items-center px-4 space-x-4 text-sm\">\n                        {linksComponent}\n                        <div className=\"px-4 space-x-2 pl-8\">\n                        <Link className=\" rounded-lg p-2 px-4 text-gray-800\" to=\"/login\">Login</Link>\n                        <Link className=\"rounded-lg p-2 px-4 border-solid border-2 border-red-600\" to=\"/signup\">Sign up</Link>\n                        </div>\n                    </div>\n                    {/* Mobile screen */}\n                    <div className=\"sm:hidden flex-1 flex justify-end\">\n                        <button onClick={handleToggleSideBar} className=\"px-4 p-2  rounded-lg shadow-lg text-red-600\">=</button>\n                       \n                    </div>\n                    {/* SIDE BAR */}\n                    {\n                       sideBarActive && (\n                        <div  className=\"transition  duration-500 transform ease-in-out fixed top-0 right-0 h-screen w-2/3 bg-white shadow-lg\">\n                            <div className=\"flex justify-end p-2\">\n                                <button onClick={handleToggleSideBar} className=\"px-4 p-2  rounded-lg shadow-lg text-red-600\">X</button>\n                            </div>\n                            <div className=\"flex flex-col p-4 space-y-2\">\n\n                                {linksComponent}\n                                <div className=\"p-2 flex flex-col space-y-2 text-center\">\n                                <Link className=\"bg-red-600 rounded-lg p-2 px-4 text-white  shadow-lg\" to=\"/login\">Login</Link>\n                                <Link className=\"bg-white rounded-lg p-2 px-4 text-red-600 shadow-lg\" to=\"/signup\">Sign up</Link>\n                                </div>\n                            </div>\n                        </div>\n                        )\n                        \n                    }\n            </div>\n        );\n    \n    \n};\n \nexport default Nav;\n\n\n","import { RichText } from 'prismic-reactjs';\nimport React, { Component, useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport { client, linkResolver } from '../prismic-configuration';\n\nconst Footer = ()=>{\n    const links = useSelector(state => state.nav.links)\n    const linksComponent = links.map(e=>(<Link key={e.path} className={`hover:text-red-600`} to={e.path}>{e.title}</Link>))\n    \n    const [PageData, setPageData] = useState(null);\n\n    const logoData = useSelector(state=>state.nav.logo)\n    const fetchData = ()=>{\n          client.getSingle('contactpage').then((res)=>{\n        \n          setPageData(res.data)\n          console.log(res)\n          }).catch(error=>{\n            console.log(error)\n          })\n      }\n    useEffect(()=>{\n        fetchData();\n    },[])\n    const contactComponent = PageData && PageData.body.map((slice, index)=>{\n        if(slice.slice_type == 'contact_link'){\n            const  teams = slice.items.map((item,index)=>\n                 (\n                    <a href={item.link.url} target=\"_blank\"  key={index} className=\"px-4 cursor-pointer\">\n                        <img className=\"w-6 h-6 object-contain mx-auto\" src={item.icon.url} alt=\"\"/>\n                        <p className=\"text-bold text-center text-sm pt-4 text-gray-800\">{RichText.asText(item.name,linkResolver)}</p>\n                    </a>\n                )\n            )\n            return teams\n        }\n        return null;\n    })\n\n        return ( \n            <div className=\"bg-gray-100 relative border border-b-0 border-r-0 border-l-0 border-solid \">\n                <div className=\"flex flex-wrap p-6 py-20 \">\n                    <div className=\"w-1/2 sm:w-1/4 flex-1 flex flex-col items-center sm:items-start justify-start  space-y-4 text-gray-800 text-sm font-semibold px-8\">\n                            {linksComponent}\n                            {/* <Link className=\"hover:text-indigo-600\" to=\"/student\">Student</Link>\n                            <Link className=\"hover:text-indigo-600\" to=\"/teacher\">Teacher</Link>\n                            <Link className=\"hover:text-indigo-600\" to=\"/plan\">Plan</Link>\n                            <Link className=\"hover:text-indigo-600\" to=\"/help\">Help</Link> */}\n                    </div>\n                    <div className=\"w-full sm:w-1/4 flex-1 flex flex-col items-center   justify-start  text-white text-sm font-semibold px-8 py-4\">\n                        <div className=\"w-full sm:w-1/2 border border-t-0 border-l-0 border-r-0 mb-4\">\n                            <img className=\"mx-auto h-10 w-auto\" src={logoData&&logoData.icon.url} alt=\"Workflow\"/>\n                            <h1 className=\"text-lg text-red-600 font-bold text-center py-2\">{logoData&&logoData.text}</h1>\n                        </div>\n                        <div className=\"flex\">\n                            {contactComponent}\n                        </div>\n                    </div>\n                    <div className=\"w-full sm:w-2/4 relative flex\">\n                        <div style={{width:'1px'}} className=\"hidden sm:inline-block h-full bg-gray-300\"></div>\n                        <div className=\"flex-1 flex items-center justify-start px-6 sm:px-10  text-gray-800\">\n                            <div className=\"space-y-4\">\n                                <h3 className=\"text-lg font-bold\">Web Info</h3>\n                                {PageData && RichText.render(PageData.site_contact,linkResolver)}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"h-10 absolute bottom-0 inset-x-0 bg-gray-900 flex items-center\">\n                    <div className=\"text-white\">\n                        <p className=\"text-sm font-bold px-2 \">\n                            © 2020 Powered by THE SEEED\n                        </p>\n                    </div>\n                </div>\n            </div>\n         );\n    \n}\n \nexport default Footer;","import React, { Fragment, useEffect } from 'react'\nimport { Helmet } from 'react-helmet'\nimport 'element-react';\n\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  Redirect,\n  withRouter,\n  useLocation\n} from 'react-router-dom'\nimport { apiEndpoint } from './prismic-configuration'\nimport { \n  Help,\n  Preview,\n  NotFound,\n  Page,\n  HomePage,\n  HelpPage,\n  ContactPage,\n  AboutPage,\n  SignInPage,\n  SignUpPage,\n  DetailPage\n} from './pages'\nimport Nav from './layout/nav';\nimport Footer from './layout/footer'\n// import Home from './pages/home/home'\n// import Student from './pages/student/student';\n// import Teacher from './pages/teacher/teacher';\n// import TeacherDetail from './pages/teacher/teacherDetail';\n// import Footer from './layout/footer';\n// import Plan from './pages/plan/plan';\n// import History from './pages/History/History';\n// import Singin from './pages/Auth/singin';\n// import Signup from './pages/Auth/signup';\n// import TeacherDashboard from './pages/teacher/teacherDashboard';\n// import Live from './pages/student/live';\n/**\n * Main application componenet\n */\n\n\nfunction _ScrollToTop(props) {\n  const { pathname } = useLocation()\n  useEffect(() => {\n      window.scrollTo(0, 0);\n  }, [pathname]);\n  return props.children\n}\nconst ScrollToTop = withRouter(_ScrollToTop)\n\nconst App = (props) => {\n  const repoNameArray = /([^/]+)\\.cdn.prismic\\.io\\/api/.exec(apiEndpoint)\n  const repoName = repoNameArray[1]\n  const routes = [\n  {\n    path:'/contact',\n    component:ContactPage\n  },\n  {\n    path:'/about',\n    component:AboutPage\n  },\n  {\n    path:'/help',\n    component:HelpPage\n  },\n  {\n    path:'/preview',\n    component:Preview\n  },\n  {\n    path:'/home',\n    component:HomePage\n  },\n  {\n    path:'/login',\n    component:SignInPage\n  },\n  {\n    path:'/signup',\n    component:SignUpPage\n  }\n]\n\n  return (\n    \n    <Fragment>\n      <Helmet>\n        <script async defer src={`//static.cdn.prismic.io/prismic.js?repo=${repoName}&new=true`} />\n      </Helmet>\n\n      <BrowserRouter basename={`${process.env.PUBLIC_URL}`}>\n        <Nav {...props}/>\n        <Switch>\n          \n            <Redirect exact from='/' to='/home' />\n            <Route exact path='/home/:uid'    render={(props)=><HomePage {...props}/>} />\n            <Route exact path='/page/:uid'    render={(props)=><Page {...props}/>}/>\n            <Route exact path='/detail/:uid' render={(props)=><DetailPage {...props}/>}/>\n  \n            {routes.map(e=>(<Route key={e.path} exact path={e.path} component={e.component} />))}\n            {/* <Route path={\"/\"} exact render={(props)=><><Home {...props}/><Footer/></>}/>\n            <Route path={\"/student\"} render={(props)=><Student {...props}/>}/>\n            <Route path={\"/teacher\"} render={(props)=><TeacherDashboard {...props}/>}/>\n            <Route path={\"/teachers\"} render={(props)=><Teacher {...props}/>}/>\n            <Route path={\"/teacherdetail\"} render={(props)=><TeacherDetail {...props}/>}/>\n            <Route path={\"/live\"} render={(props)=><Live {...props}/>}/>\n            <Route path={\"/help\"} render={(props)=><Help {...props}/>}/>\n            <Route path={\"/plan\"} render={(props)=><Plan {...props}/>}/>\n            <Route path={\"/history\"} render={(props)=><History {...props}/>}/>\n            <Route path={\"/login\"} render={(props)=><Singin {...props}/>}/>\n            <Route path={\"/signup\"} render={(props)=><Signup {...props}/>}/> */}\n            {/* <Route exact path='/help' component={Help} />\n            <Route exact path='/preview' component={Preview} /> */}\n            <Route component={NotFound} />\n          \n        </Switch>\n        <Footer/>\n      </BrowserRouter>\n    </Fragment>\n  )\n}\n\nexport default withRouter(App)\n","import * as actionConst from './actionConst'\nconst initialState = {\n    loading: false,\n    posts: [],\n    tages:[],\n    miniPosts:[],\n    error: ''\n  }\nconst PostReducer = (state = initialState,action)=>{\n    switch(action.type){\n        case actionConst.FETCH_POST_REQUEST:\n            return {...state,loading:true,error:''}\n        case actionConst.FETCH_POST_FAILURE:\n            return {...state,loading:false,error:action.payload}\n        case actionConst.FETCH_POST_SUCCESS:\n            return {...state,loading:false,error:'',posts:action.payload}\n\n        case actionConst.FETCH_TAGE_REQUEST:\n            return {...state,loading:true,error:''}\n        case actionConst.FETCH_TAGE_FAILURE:\n            return {...state,loading:false,error:action.payload}\n        case actionConst.FETCH_TAGE_SUCCESS:\n            return {...state,loading:false,error:'',tages:action.payload}\n\n        case actionConst.FETCH_MINI_POST_REQUEST:\n            return {...state,loading:true,error:''}\n        case actionConst.FETCH_MINI_POST_FAILURE:\n            return {...state,loading:false,error:action.payload}\n        case actionConst.FETCH_MINI_POST_SUCCESS:\n            return {...state,loading:false,error:'',miniPosts:action.payload}\n                \n        case actionConst.POST_ADD:\n            return {...state}\n        case actionConst.POST_UPDATE:\n            return {...state}\n        case actionConst.POST_REMOVE:\n                return {...state}\n        default:\n            return state;\n    }\n}\n\nexport default PostReducer","import * as actionConst from './actionConst'\nconst initialState = {\n    loading: false,\n    logo:{\n        icon:{\n            url:'https://cdn3.iconfinder.com/data/icons/fresh-fruits-3/48/fruit-11-2-512.png'\n        },\n        text:'THE SEED'\n    },\n    links: [\n        {\n            path:'/home',\n            title:'Home',\n            icon:'menu'\n        },\n        {\n            path:'/contact',\n            title:'Contact',\n            icon:'menu'\n        },\n        {\n            path:'/about',\n            title:'About',\n            icon:'menu'\n        },\n        {\n            path:'/help',\n            title:'Help',\n            icon:'menu'\n        }\n    ],\n    selectedLink:null,\n    error: ''\n  }\n const NavReducer = (state = initialState,action)=>{\n    switch(action.type){\n        case actionConst.NAV_SELECT:\n            return {...state,selectedLink:action.payload}\n        case actionConst.NAV_SELECT_BY_PATHG:\n            return {...state,selectedLink:state.links.find(e=>e.path === action.payload)}\n        case actionConst.FETCH_LOGO_REQUEST:\n            return {...state,loading:true,error:''}\n        case actionConst.FETCH_LOGO_FAILURE:\n            return {...state,loading:false,error:action.payload}\n        case actionConst.FETCH_LOGO_SUCCESS:\n            return {...state,loading:false,error:'',logo:action.payload}\n        default:\n            return {...state};\n    }\n}\n\nexport default NavReducer;\n","import {createStore,combineReducers,applyMiddleware} from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport PostReducer from './post/reducer'\nimport NavReducer from './nav/reducer'\nimport thunkMiddleware from 'redux-thunk'\nconst mainReducer = combineReducers({\n    post:PostReducer,\n    nav:NavReducer\n})\nconst store = createStore(mainReducer,composeWithDevTools(applyMiddleware(thunkMiddleware)))\nexport default store;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport './assets/styles/main.css';\nimport './assets/styles/utility.css';\nimport './assets/js/utility.js';\nimport { Provider } from 'react-redux'\nimport store from './redux'\nimport {\n  BrowserRouter,\n} from 'react-router-dom'\n\nReactDOM.render(\n  \n    <BrowserRouter>\n      <Provider store = {store}>\n        <App />\n    </Provider>\n    </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}